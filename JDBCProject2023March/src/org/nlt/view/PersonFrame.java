package org.nlt.view;


import java.io.File;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hp
 */
public class PersonFrame extends javax.swing.JFrame implements ParentInterface {

    private String sid = null;
    public String loginUserEmail = null;
    
    public PersonFrame() {
        initComponents();
        setTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nameTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ageTextField2 = new javax.swing.JTextField();
        Label = new javax.swing.JLabel();
        phoneTextField3 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        changePasswordMenuItem = new javax.swing.JMenuItem();
        receiptMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(4, 2, 20, 10));

        jLabel2.setText("NAME");
        jPanel1.add(jLabel2);
        jPanel1.add(nameTextField1);

        jLabel3.setText("AGE");
        jPanel1.add(jLabel3);
        jPanel1.add(ageTextField2);

        Label.setText("PHONE");
        jPanel1.add(Label);
        jPanel1.add(phoneTextField3);

        jPanel2.setLayout(new java.awt.GridLayout(1, 2, 10, 20));

        submitButton.setText("SUBMIT");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        jPanel2.add(submitButton);

        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel2.add(updateButton);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(1, 2, 10, 20));

        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel3.add(deleteButton);

        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jPanel3.add(resetButton);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout(1, 1));

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(studentTable);

        jPanel4.add(jScrollPane1);

        jMenu1.setText("File");

        changePasswordMenuItem.setText("Change Password");
        changePasswordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(changePasswordMenuItem);

        receiptMenuItem.setText("Receipt");
        receiptMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(receiptMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed

        try {
            String name=nameTextField1.getText().toUpperCase();
            String age=ageTextField2.getText();
            String phone=phoneTextField3.getText();
            
            if(name.isEmpty() || age.isEmpty() || phone.isEmpty()) {
               
            JOptionPane.showMessageDialog(this, "Invalid Entry", "divya", JOptionPane.ERROR_MESSAGE);
            

            }else{   
            Statement smt = connect.createStatement();
            smt.execute("insert into students(name,age,phone,status)  values ('" + name + "'," + age + "," + phone + ",1)");

            JOptionPane.showMessageDialog(this, "Record Submitted", "divya", JOptionPane.INFORMATION_MESSAGE);
            
            smt.close();
            resetData();
            setTableData();
            }
        } catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "divya", JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_submitButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
          resetData();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
          try {

              //if we dont select record for update
              if (sid==null) 
              {
               JOptionPane.showMessageDialog(this, "Please Select Record To Update", "divya", JOptionPane.ERROR_MESSAGE);
                  
              } else {
                  
                  //if we select record then we will allow to update
                  String n =nameTextField1.getText().toUpperCase();
                  String a =ageTextField2.getText();
                  String p =phoneTextField3.getText();
                  
                  if (n.isEmpty() || a.isEmpty() || p.isEmpty()) {
                      JOptionPane.showMessageDialog(this, "Field can not Be Empty To Update Record", "divya", JOptionPane.ERROR_MESSAGE);
                  } else {
                      Statement smt = connect.createStatement();
                      smt.execute("update students set name='" + n +"', age=" + a + ",phone=" + p +" where id=" + sid);
                      
                     JOptionPane.showMessageDialog(this, " Record Updated", "divya", JOptionPane.INFORMATION_MESSAGE);
                     smt.close();
                     setTableData();
                     resetData();
                  }//inner else
                
                  
                  
                  
              }//outer else
              
              
        } //try close
          catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "divya", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
       try {
               if (sid==null) {
               JOptionPane.showMessageDialog(this, " Please select Record to Deleted", "divya", JOptionPane.ERROR_MESSAGE);

           } else {
           }
              
              
              
              Statement smt=connect.createStatement();
              smt.execute("update students set status=0 where id=" + sid);
              
              JOptionPane.showMessageDialog(this, "Record Deleted", "divya", JOptionPane.INFORMATION_MESSAGE);
              smt.close();
              resetData();
              setTableData();
             
              
        } catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "divya", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked
           try {
            //declare sid as public variable
            sid = studentTable.getValueAt(studentTable.getSelectedRow(), 0).toString();
            Statement smt= connect.createStatement();
            
            ResultSet rs=smt.executeQuery("select * from students where status=1 and id=" +sid);
            if (rs.next()) 
            {
                nameTextField1.setText(rs.getString("name"));
                ageTextField2.setText(rs.getInt("age")+"");
                phoneTextField3.setText(rs.getLong("phone")+"");
            }
          rs.close();
          smt.close();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "JDBC CRUD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_studentTableMouseClicked

    private void changePasswordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordMenuItemActionPerformed
            changePasswordFrame.setVisible(true);
    }//GEN-LAST:event_changePasswordMenuItemActionPerformed

    private void receiptMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptMenuItemActionPerformed
         try
       {
           String recNo=JOptionPane.showInputDialog(this, "Please Enter Receipt No");
           
           File f=new File(".");
           System.out.println(f.getCanonicalPath());
        
           String filePath=f.getCanonicalPath()+File.separator+"build"+File.separator+"classes"+File.separator+"org"+File.separator+"nlt"+File.separator+"report"+File.separator+"receipt.jrxml";
           File reportFile=new File(filePath);
           if(reportFile.exists())
           {
               
               JasperDesign jd = JRXmlLoader.load(reportFile);
            String sql = "SELECT\n" +
"    receipt.`id` AS receipt_id,\n" +
"    receipt.`name` AS receipt_name,\n" +
"     receipt.`coursename` AS receipt_coursename,\n" +
"     receipt.`amountinwprd` AS receipt_amountinwprd,\n" + 
"    receipt.`amount` AS receipt_amount,\n" +
"     receipt.`receiptno` AS receipt_receiptno,\n" +
"     receipt.`paydate` AS receipt_paydate,\n" +
"     receipt.`status` AS receipt_status\n" +
"FROM\n" +
"     `receipt` receipt where   receipt.`receiptno`="+recNo;

            // System.out.println(sql);
            JRDesignQuery query = new JRDesignQuery();

            query.setText(sql);

            jd.setQuery(query);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, connect);

            String pdfFileName = f.getCanonicalPath() + File.separator + "receipt.pdf";
            JasperExportManager.exportReportToPdfFile(jp, pdfFileName);

               JasperViewer.viewReport(jp, false);
               
           }
          } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "JDBC CRUD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_receiptMenuItemActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label;
    private javax.swing.JTextField ageTextField2;
    private javax.swing.JMenuItem changePasswordMenuItem;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField1;
    private javax.swing.JTextField phoneTextField3;
    private javax.swing.JMenuItem receiptMenuItem;
    private javax.swing.JButton resetButton;
    private javax.swing.JTable studentTable;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

    private void resetData()
    {
        nameTextField1.setText("");
        ageTextField2.setText("");
        phoneTextField3.setText("");
    }
    
    //will fetch all record from db of students table & put them into database
    //we will call it from ctor,submitButton,updateButton,deleteButton
    private void setTableData(){
        try {
            Statement smt = connect.createStatement();
            ResultSet rs = smt.executeQuery("select * from students where status=1");
            rs.last();//will move cursor at last row no & will get size or rows
            int lastRowNo=rs.getRow();
            rs.beforeFirst();//rs will move back as it is 
            
            String[] cols={"ID","NAME","AGE","PHONE"};
            String[][] data=new String[lastRowNo][cols.length];
            
            int i=0;
            while (rs.next())
            {                
              data[i][0]=rs.getInt("id")+"";
              data[i][1]=rs.getString("name");
              data[i][2]=rs.getInt("age")+"";
              data[i][3]=rs.getString("phone");
              i++;
            }
            
            DefaultTableModel model=new DefaultTableModel(data, cols);
            studentTable.setModel(model);
            rs.close();
            smt.close();
        } catch (Exception ex) {
           JOptionPane.showMessageDialog(this, "Record Deleted", "divya", JOptionPane.INFORMATION_MESSAGE);

        }
    }
    
}
    
    
    
    

